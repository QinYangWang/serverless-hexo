AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Parameters:
  Prefix:
    Type: String
    Description: Resource name prefix.
  Env:
    Type: String
    Description: Resource deployment environment.
Resources:
  #######################################
  # Blog static file storage S3 bucket
  #######################################
  StaticLogsBucketLogs:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${Prefix}-${Env}-static-logs'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  StaticBucketResource:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${Prefix}-${Env}-static'
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
      LoggingConfiguration:
        DestinationBucketName: !Ref 'StaticLogsBucketLogs'
        LogFilePrefix: 'origin/'
  StaticBucketBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Statement:
        - Action: "s3:GetObject"
          Effect: Allow
          Resource: !Sub "arn:aws:s3:::${Bucket}/*"
          Principal: '*'
  #######################################
  # Blog static file CloudFront CDN
  #######################################
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          Compress: true
          AllowedMethods:
          - GET
          - HEAD
          CachedMethods:
          - GET
          - HEAD
          ForwardedValues:
            QueryString: true
          MinTTL: 60
          MaxTTL: 86400
          DefaultTTL: 3600
          TargetOriginId: !Sub '${Prefix}-${Env}-static-website-origin'
          ViewerProtocolPolicy: 'redirect-to-https'
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: '/404.html'
          - ErrorCachingMinTTL: 60
            ErrorCode: 403
            ResponseCode: 403
            ResponsePagePath: '/403.html'
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: 'index.html'
        IPV6Enabled: true
        Logging:
          Bucket: !GetAtt 'StaticLogsBucketLogs.DomainName'
          IncludeCookies: false
          Prefix: 'cdn/'
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: http-only
            DomainName: !GetAtt 'StaticBucketResource.WebsiteURL'
            Id: !Sub '${Prefix}-${Env}-static-website-origin'
        PriceClass: 'PriceClass_All'

  #######################################
  # Blog static file generate lambda layer 
  #######################################
  HexoLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: hexo and hexo plugin
      ContentUri: layers/hexo
      CompatibleRuntimes:
        - nodejs20.x
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: nodejs20.x
  #######################################
  # Blog static file generate lambda 
  #######################################
  StaticGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Prefix}-${Env}-static-lambda"
      CodeUri: functions/staticgenerator
      Handler: app.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Layers:
        - !Ref HexoLayer
        - !Sub arn:aws:lambda:${AWS::Region}:553035198032:layer:git-lambda2:8
      Timeout: 300
      Environment:
        Variables:
          BUCKET_NAME: !Ref StaticBucketResource